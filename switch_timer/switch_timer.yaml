group:
  switch_timer_group:
    name: "Entity's Timer"
    view: false
    control: hidden
    entities:
      - input_boolean.switch_timer_boolean
      - input_select.switch_timer_entities
      - input_text.switch_timer_text
      - input_select.switch_timer_actions
      - input_number.switch_timer_hours
      - input_number.switch_timer_minutes
      - input_number.switch_timer_seconds
      - automation.switch_timer_auto02
      - automation.stop_timer_if_turned_off
      - script.switch_timer_script01

input_number:
  switch_timer_minutes:
    name: Timer Minutes
    initial: 0
    min: 0
    max: 10
    step: 1

  switch_timer_hours:
    name: Timer Hours
    initial: 0
    min: 0
    max: 24
    step: 1

  switch_timer_seconds:
    name: Timer Seconds
    initial: 60
    min: 0
    max: 60
    step: 5

input_text:
  switch_timer_text:
    name: "Write entity_id"
    initial: "(entity_id)"

input_select:
  switch_timer_entities:
    name: "Choose entity:"
    initial: "Kettle"
    options:
     - "--Select Entity--"
     - Kettle
     - Light
     - TV
     - "Input Text"

  switch_timer_actions:
    name: Entities IDs
    initial: "Off"
    options:
     - "--Select Action--"
     - "On"
     - "Off"
     - "Toggle"

input_boolean:
  switch_timer_boolean:
    name: "Start Timer"
    initial: off

script:
  switch_timer_script01:
    sequence:
      - delay: '{{ states.input_number.switch_timer_hours.state | int }}:{{ states.input_number.switch_timer_minutes.state | int }}:{{ states.input_number.switch_timer_seconds.state | int }}'

      - service_template: >
          {% if is_state("input_select.switch_timer_actions", "On") %} homeassistant.turn_on
          {% elif is_state("input_select.switch_timer_actions", "Off") %} homeassistant.turn_off
          {% elif is_state("input_select.switch_timer_actions", "Toggle") %} homeassistant.toggle
          {% endif %}
        data_template:
          entity_id: >
            {% if is_state("input_select.switch_timer_entities", "Kettle") %} switch.kettle
            {% elif is_state("input_select.switch_timer_entities", "Light") %} light.light
            {% elif is_state("input_select.switch_timer_entities", "TV") %} switch.TV
            {% elif is_state("input_select.switch_timer_entities", "Input Text") %} {{ states.input_text.switch_timer_text.state }}
            {% endif %}

      - service: homeassistant.turn_off
        entity_id: input_boolean.switch_timer_boolean

automation:
  - alias: "switch_timer_auto02"
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_boolean.switch_timer_boolean
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.switch_timer_boolean
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: script.switch_timer_script01

  - alias: "Stop Timer if turned Off"
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_boolean.switch_timer_boolean
        from: 'on'
        to: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: script.switch_timer_script01
        
  - alias: "Reset choosen entity"
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_boolean.switch_timer_boolean
        from: 'on'
        to: 'off'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.switch_timer_entities
          option: "--Select Entity--"
          
  - alias: "Reset choosen action"
    initial_state: false
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_boolean.switch_timer_boolean
        from: 'on'
        to: 'off'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.switch_timer_actions
          option: "--Select Action--"
